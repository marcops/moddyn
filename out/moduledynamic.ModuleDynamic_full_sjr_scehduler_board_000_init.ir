(MODULE moduledynamic.ModuleDynamic_full
  (VARIABLES 
    (CONSTANT INT constant_00001 32000)
    (VAR INT class_DEFAULT_PAGE_SIZE_0000 :public false :global_constant false :method_param false :original DEFAULT_PAGE_SIZE :method null :private_method false :volatile false :member true :init (REF CONSTANT constant_00001))
    (CONSTANT INT constant_00003 256000)
    (VAR INT class_DEFAULT_MEMORY_SIZE_PER_BLOCK_0002 :public false :global_constant false :method_param false :original DEFAULT_MEMORY_SIZE_PER_BLOCK :method null :private_method false :volatile false :member true :init (REF CONSTANT constant_00003))
    (CONSTANT INT constant_00005 8)
    (VAR INT class_BYTE_SIZE_0004 :public false :global_constant false :method_param false :original BYTE_SIZE :method null :private_method false :volatile false :member true :init (REF CONSTANT constant_00005))
    (VAR INT class_pageSize_0006 :public false :global_constant false :method_param false :original pageSize :method null :private_method false :volatile false :member true :init (REF VAR class_DEFAULT_PAGE_SIZE_0000))
    (CONSTANT INT constant_00008 256000)
    (ARRAY-REF ARRAY array_00009 :depth 18 :words 256000)
    (VAR ArrayType::BOOLEAN class_data1_0007 :public false :global_constant false :method_param false :original data1 :method null :private_method false :volatile false :member true :init (REF ARRAY array_00009))
    (CONSTANT INT constant_00011 256000)
    (ARRAY-REF ARRAY array_00012 :depth 18 :words 256000)
    (VAR ArrayType::BOOLEAN class_data2_0010 :public false :global_constant false :method_param false :original data2 :method null :private_method false :volatile false :member true :init (REF ARRAY array_00012))
  )
 (BOARD VOID setPageSize
  (VARIABLES 
    (VAR INT setPageSize_newPageSize_0013 :public false :global_constant false :method_param true :original newPageSize :method setPageSize :private_method false :volatile false :member false)
  )
    (SEQUENCER setPageSize
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET class_pageSize_0006 (ASSIGN setPageSize_newPageSize_0013) :next (3))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD INT writeFlow
  (VARIABLES 
    (VAR INT writeFlow_address_0014 :public false :global_constant false :method_param true :original address :method writeFlow :private_method false :volatile false :member false)
    (VAR INT writeFlow_data_0015 :public false :global_constant false :method_param true :original data :method writeFlow :private_method false :volatile false :member false)
    (VAR INT method_result_00017 :public false :global_constant false :method_param false :original method_result_00017 :method null :private_method false :volatile false :member false)
    (VAR INT writeFlow_ecc_0016 :public false :global_constant false :method_param false :original ecc :method writeFlow :private_method false :volatile false :member false :init (REF VAR method_result_00017))
    (VAR INT method_result_00018 :public false :global_constant false :method_param false :original method_result_00018 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER writeFlow
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET method_result_00017 (CALL writeFlow_address_0014 :no_wait false :name getEcc :args ( address)) :next (3))
      )
      (SLOT 3
        (SET writeFlow_ecc_0016 (ASSIGN method_result_00017) :next (4))
      )
      (SLOT 4
        (SET method_result_00018 (CALL writeFlow_data_0015 writeFlow_ecc_0016 :no_wait false :name doEcc :args ( data ecc)) :next (5))
      )
      (SLOT 5
        (RETURN method_result_00018 :next (0))
      )
      (SLOT 6
        (JP :next (0))
      )
    )
 )
 (BOARD INT readFlow
  (VARIABLES 
    (VAR INT readFlow_address_0019 :public false :global_constant false :method_param true :original address :method readFlow :private_method false :volatile false :member false)
    (VAR INT readFlow_data_0020 :public false :global_constant false :method_param true :original data :method readFlow :private_method false :volatile false :member false)
    (VAR INT method_result_00022 :public false :global_constant false :method_param false :original method_result_00022 :method null :private_method false :volatile false :member false)
    (VAR INT readFlow_ecc_0021 :public false :global_constant false :method_param false :original ecc :method readFlow :private_method false :volatile false :member false :init (REF VAR method_result_00022))
    (VAR BOOLEAN method_result_00024 :public false :global_constant false :method_param false :original method_result_00024 :method null :private_method false :volatile false :member false)
    (VAR BOOLEAN readFlow_isOk_0023 :public false :global_constant false :method_param false :original isOk :method readFlow :private_method false :volatile false :member false :init (REF VAR method_result_00024))
    (VAR VOID method_result_00025 :public false :global_constant false :method_param false :original method_result_00025 :method null :private_method false :volatile false :member false)
    (CONSTANT INT constant_00026 0)
  )
    (SEQUENCER readFlow
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET method_result_00022 (CALL readFlow_address_0019 :no_wait false :name getEcc :args ( address)) :next (3))
      )
      (SLOT 3
        (SET readFlow_ecc_0021 (ASSIGN method_result_00022) :next (4))
      )
      (SLOT 4
        (SET method_result_00024 (CALL readFlow_data_0020 readFlow_ecc_0021 :no_wait false :name checkECC :args ( data ecc)) :next (5))
      )
      (SLOT 5
        (SET readFlow_isOk_0023 (ASSIGN method_result_00024) :next (6))
      )
      (SLOT 6
        (JT readFlow_isOk_0023 :next (8 7))
      )
      (SLOT 7
        (JP :next (10))
      )
      (SLOT 8
        (RETURN readFlow_data_0020 :next (0))
      )
      (SLOT 9
        (JP :next (7))
      )
      (SLOT 10
        (SET method_result_00025 (CALL readFlow_address_0019 readFlow_ecc_0021 class_pageSize_0006 :no_wait false :name migration :args ( address ecc pageSize)) :next (11))
      )
      (SLOT 11
        (RETURN constant_00026 :next (0))
      )
      (SLOT 12
        (JP :next (0))
      )
    )
 )
 (BOARD INT getEcc
  (VARIABLES 
    (VAR INT getEcc_address_0027 :public false :global_constant false :method_param true :original address :method getEcc :private_method true :volatile false :member false)
    (VAR INT method_result_00029 :public false :global_constant false :method_param false :original method_result_00029 :method null :private_method false :volatile false :member false)
    (VAR INT getEcc_dataPosition_0028 :public false :global_constant false :method_param false :original dataPosition :method getEcc :private_method true :volatile false :member false :init (REF VAR method_result_00029))
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00031 :ref class_data1_0007 :ptr getEcc_dataPosition_0028 :member false)
    (VAR BOOLEAN getEcc_currentData1_0030 :public false :global_constant false :method_param false :original currentData1 :method getEcc :private_method true :volatile false :member false :init (REF VAR array_access_00031))
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00033 :ref class_data2_0010 :ptr getEcc_dataPosition_0028 :member false)
    (VAR BOOLEAN getEcc_currentData2_0032 :public false :global_constant false :method_param false :original currentData2 :method getEcc :private_method true :volatile false :member false :init (REF VAR array_access_00033))
    (CONSTANT INT constant_00034 1)
    (CONSTANT INT constant_00035 0)
    (VAR INT cond_expr_00036 :public false :global_constant false :method_param false :original cond_expr_00036 :method null :private_method false :volatile false :member false)
    (CONSTANT INT constant_00037 2)
    (CONSTANT INT constant_00038 0)
    (VAR INT cond_expr_00039 :public false :global_constant false :method_param false :original cond_expr_00039 :method null :private_method false :volatile false :member false)
    (VAR INT binary_expr_00040 :public false :global_constant false :method_param false :original binary_expr_00040 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER getEcc
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET method_result_00029 (CALL getEcc_address_0027 :no_wait false :name getPosition :args ( address)) :next (3))
      )
      (SLOT 3
        (SET getEcc_dataPosition_0028 (ASSIGN method_result_00029) :next (4))
      )
      (SLOT 4
        (SET array_access_00031 (ARRAY_ACCESS class_data1_0007 getEcc_dataPosition_0028) :next (5))
      )
      (SLOT 5
        (SET getEcc_currentData1_0030 (ASSIGN array_access_00031) :next (6))
      )
      (SLOT 6
        (SET array_access_00033 (ARRAY_ACCESS class_data2_0010 getEcc_dataPosition_0028) :next (7))
      )
      (SLOT 7
        (SET getEcc_currentData2_0032 (ASSIGN array_access_00033) :next (8))
      )
      (SLOT 8
        (SET cond_expr_00036 (COND getEcc_currentData1_0030 constant_00034 constant_00035) :next (9))
      )
      (SLOT 9
        (SET cond_expr_00039 (COND getEcc_currentData2_0032 constant_00037 constant_00038) :next (10))
      )
      (SLOT 10
        (SET binary_expr_00040 (ADD cond_expr_00036 cond_expr_00039) :next (11))
      )
      (SLOT 11
        (RETURN binary_expr_00040 :next (0))
      )
      (SLOT 12
        (JP :next (0))
      )
    )
 )
 (BOARD INT getPosition
  (VARIABLES 
    (VAR INT getPosition_address_0041 :public false :global_constant false :method_param true :original address :method getPosition :private_method true :volatile false :member false)
    (VAR INT binary_expr_00042 :public false :global_constant false :method_param false :original binary_expr_00042 :method null :private_method false :volatile false :member false)
    (VAR INT binary_expr_00043 :public false :global_constant false :method_param false :original binary_expr_00043 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER getPosition
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET binary_expr_00042 (MUL32 class_pageSize_0006 class_BYTE_SIZE_0004) :next (3))
      )
      (SLOT 3
        (SET binary_expr_00043 (DIV32 getPosition_address_0041 binary_expr_00042) :next (4))
      )
      (SLOT 4
        (RETURN binary_expr_00043 :next (0))
      )
      (SLOT 5
        (JP :next (0))
      )
    )
 )
 (BOARD VOID incrementEcc
  (VARIABLES 
    (VAR INT incrementEcc_position_0044 :public false :global_constant false :method_param true :original position :method incrementEcc :private_method true :volatile false :member false)
    (VAR INT incrementEcc_ecc_0045 :public false :global_constant false :method_param true :original ecc :method incrementEcc :private_method true :volatile false :member false)
    (CONSTANT INT constant_00046 0)
    (CONSTANT INT constant_00047 1)
    (CONSTANT INT constant_00048 2)
    (CONSTANT INT constant_00049 3)
    (CONSTANT BOOLEAN constant_00050 true)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00051 :ref class_data1_0007 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00052 true)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00053 :ref class_data2_0010 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00054 false)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00055 :ref class_data1_0007 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00056 true)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00057 :ref class_data2_0010 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00058 true)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00059 :ref class_data1_0007 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00060 false)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00061 :ref class_data2_0010 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00062 false)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00063 :ref class_data1_0007 :ptr incrementEcc_position_0044 :member false)
    (CONSTANT BOOLEAN constant_00064 false)
    (VAR-REF ArrayRef::ArrayType::BOOLEAN array_access_00065 :ref class_data2_0010 :ptr incrementEcc_position_0044 :member false)
  )
    (SEQUENCER incrementEcc
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SELECT incrementEcc_ecc_0045 :target incrementEcc_ecc_0045 :patterns ( constant_00046 constant_00047 constant_00048 constant_00049) :next (23 17 11 5 4))
      )
      (SLOT 3
        (JP :next (29))
      )
      (SLOT 4
        (JP :next (3))
      )
      (SLOT 5
        (SET array_access_00051 (ARRAY_ACCESS class_data1_0007 incrementEcc_position_0044) :next (6))
      )
      (SLOT 6
        (SET array_access_00051 (ASSIGN constant_00050) :next (7))
      )
      (SLOT 7
        (SET array_access_00053 (ARRAY_ACCESS class_data2_0010 incrementEcc_position_0044) :next (8))
      )
      (SLOT 8
        (SET array_access_00053 (ASSIGN constant_00052) :next (9))
      )
      (SLOT 9
        (BREAK :next (3))
      )
      (SLOT 10
        (JP :next (4))
      )
      (SLOT 11
        (SET array_access_00055 (ARRAY_ACCESS class_data1_0007 incrementEcc_position_0044) :next (12))
      )
      (SLOT 12
        (SET array_access_00055 (ASSIGN constant_00054) :next (13))
      )
      (SLOT 13
        (SET array_access_00057 (ARRAY_ACCESS class_data2_0010 incrementEcc_position_0044) :next (14))
      )
      (SLOT 14
        (SET array_access_00057 (ASSIGN constant_00056) :next (15))
      )
      (SLOT 15
        (BREAK :next (3))
      )
      (SLOT 16
        (JP :next (5))
      )
      (SLOT 17
        (SET array_access_00059 (ARRAY_ACCESS class_data1_0007 incrementEcc_position_0044) :next (18))
      )
      (SLOT 18
        (SET array_access_00059 (ASSIGN constant_00058) :next (19))
      )
      (SLOT 19
        (SET array_access_00061 (ARRAY_ACCESS class_data2_0010 incrementEcc_position_0044) :next (20))
      )
      (SLOT 20
        (SET array_access_00061 (ASSIGN constant_00060) :next (21))
      )
      (SLOT 21
        (BREAK :next (3))
      )
      (SLOT 22
        (JP :next (11))
      )
      (SLOT 23
        (SET array_access_00063 (ARRAY_ACCESS class_data1_0007 incrementEcc_position_0044) :next (24))
      )
      (SLOT 24
        (SET array_access_00063 (ASSIGN constant_00062) :next (25))
      )
      (SLOT 25
        (SET array_access_00065 (ARRAY_ACCESS class_data2_0010 incrementEcc_position_0044) :next (26))
      )
      (SLOT 26
        (SET array_access_00065 (ASSIGN constant_00064) :next (27))
      )
      (SLOT 27
        (BREAK :next (3))
      )
      (SLOT 28
        (JP :next (17))
      )
      (SLOT 29
        (JP :next (0))
      )
    )
 )
 (BOARD VOID migration
  (VARIABLES 
    (VAR INT migration_address_0066 :public false :global_constant false :method_param true :original address :method migration :private_method true :volatile false :member false)
    (VAR INT migration_ecc_0067 :public false :global_constant false :method_param true :original ecc :method migration :private_method true :volatile false :member false)
    (VAR INT migration_pageSize_0068 :public false :global_constant false :method_param true :original pageSize :method migration :private_method true :volatile false :member false)
    (CONSTANT INT constant_00069 3)
    (VAR BOOLEAN binary_expr_00070 :public false :global_constant false :method_param false :original binary_expr_00070 :method null :private_method false :volatile false :member false)
    (VAR INT binary_expr_00072 :public false :global_constant false :method_param false :original binary_expr_00072 :method null :private_method false :volatile false :member false)
    (VAR INT migration_position_0071 :public false :global_constant false :method_param false :original position :method migration :private_method true :volatile false :member false :init (REF VAR binary_expr_00072))
    (VAR INT binary_expr_00074 :public false :global_constant false :method_param false :original binary_expr_00074 :method null :private_method false :volatile false :member false)
    (VAR INT migration_initialAddress_0073 :public false :global_constant false :method_param false :original initialAddress :method migration :private_method true :volatile false :member false :init (REF VAR binary_expr_00074))
    (CONSTANT INT constant_00076 0)
    (VAR INT migration_i_0075 :public false :global_constant false :method_param false :original i :method migration :private_method true :volatile false :member false :init (REF CONSTANT constant_00076))
    (VAR BOOLEAN binary_expr_00077 :public false :global_constant false :method_param false :original binary_expr_00077 :method null :private_method false :volatile false :member false)
    (VAR INT unary_expr_00078 :public false :global_constant false :method_param false :original unary_expr_00078 :method null :private_method false :volatile false :member false)
    (VAR INT unary_expr_postfix_preserved_00079 :public false :global_constant false :method_param false :original unary_expr_postfix_preserved_00079 :method null :private_method false :volatile false :member false)
    (CONSTANT INT constant_00080 1)
    (VAR INT method_result_00082 :public false :global_constant false :method_param false :original method_result_00082 :method null :private_method false :volatile false :member false)
    (VAR INT binary_expr_00083 :public false :global_constant false :method_param false :original binary_expr_00083 :method null :private_method false :volatile false :member false)
    (VAR INT migration_read_0081 :public false :global_constant false :method_param false :original read :method migration :private_method true :volatile false :member false :init (REF VAR method_result_00082))
    (VAR VOID method_result_00084 :public false :global_constant false :method_param false :original method_result_00084 :method null :private_method false :volatile false :member false)
    (VAR INT binary_expr_00085 :public false :global_constant false :method_param false :original binary_expr_00085 :method null :private_method false :volatile false :member false)
    (CONSTANT INT constant_00086 1)
    (VAR INT binary_expr_00087 :public false :global_constant false :method_param false :original binary_expr_00087 :method null :private_method false :volatile false :member false)
    (VAR VOID method_result_00088 :public false :global_constant false :method_param false :original method_result_00088 :method null :private_method false :volatile false :member false)
    (CONSTANT INT constant_00089 1)
    (VAR INT binary_expr_00090 :public false :global_constant false :method_param false :original binary_expr_00090 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER migration
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET binary_expr_00070 (COMPEQ migration_ecc_0067 constant_00069) :next (3))
      )
      (SLOT 3
        (JT binary_expr_00070 :next (5 4))
      )
      (SLOT 4
        (JP :next (7))
      )
      (SLOT 5
        (RETURN :next (0))
      )
      (SLOT 6
        (JP :next (4))
      )
      (SLOT 7
        (SET binary_expr_00072 (DIV32 migration_address_0066 migration_pageSize_0068) :next (8))
      )
      (SLOT 8
        (SET migration_position_0071 (ASSIGN binary_expr_00072) :next (9))
      )
      (SLOT 9
        (SET binary_expr_00074 (MUL32 migration_position_0071 migration_pageSize_0068) :next (10))
      )
      (SLOT 10
        (SET migration_initialAddress_0073 (ASSIGN binary_expr_00074) :next (11))
      )
      (SLOT 11
        (SET migration_i_0075 (ASSIGN constant_00076) :next (12))
      )
      (SLOT 12
        (SET binary_expr_00077 (LT migration_i_0075 migration_pageSize_0068) :next (13))
      )
      (SLOT 13
        (JT binary_expr_00077 :next (19 14))
      )
      (SLOT 14
        (JP :next (26))
      )
      (SLOT 15
        (SET unary_expr_postfix_preserved_00079 (ASSIGN migration_i_0075) :next (16))
      )
      (SLOT 16
        (SET unary_expr_00078 (ADD migration_i_0075 constant_00080) :next (17))
      )
      (SLOT 17
        (SET migration_i_0075 (ASSIGN unary_expr_00078) :next (18))
      )
      (SLOT 18
        (JP :next (12))
      )
      (SLOT 19
        (SET binary_expr_00083 (ADD migration_initialAddress_0073 migration_i_0075) :next (20))
      )
      (SLOT 20
        (SET method_result_00082 (CALL binary_expr_00083 migration_ecc_0067 :no_wait false :name read :args ( address ecc)) :next (21))
      )
      (SLOT 21
        (SET migration_read_0081 (ASSIGN method_result_00082) :next (22))
      )
      (SLOT 22
        (SET binary_expr_00085 (ADD migration_initialAddress_0073 migration_i_0075) :next (23))
      )
      (SLOT 23
        (SET binary_expr_00087 (ADD migration_ecc_0067 constant_00086) :next (24))
      )
      (SLOT 24
        (SET method_result_00084 (CALL binary_expr_00085 migration_read_0081 binary_expr_00087 :no_wait false :name write :args ( address data ecc)) :next (25))
      )
      (SLOT 25
        (JP :next (15))
      )
      (SLOT 26
        (SET binary_expr_00090 (ADD migration_ecc_0067 constant_00089) :next (27))
      )
      (SLOT 27
        (SET method_result_00088 (CALL migration_position_0071 binary_expr_00090 :no_wait false :name incrementEcc :args ( position ecc)) :next (28))
      )
      (SLOT 28
        (JP :next (0))
      )
    )
 )
 (BOARD VOID write
  (VARIABLES 
    (VAR INT write_address_0091 :public false :global_constant false :method_param true :original address :method write :private_method true :volatile false :member false)
    (VAR INT write_data_0092 :public false :global_constant false :method_param true :original data :method write :private_method true :volatile false :member false)
    (VAR INT write_ecc_0093 :public false :global_constant false :method_param true :original ecc :method write :private_method true :volatile false :member false)
    (VAR INT method_result_00095 :public false :global_constant false :method_param false :original method_result_00095 :method null :private_method false :volatile false :member false)
    (VAR INT write_newData_0094 :public false :global_constant false :method_param false :original newData :method write :private_method true :volatile false :member false :init (REF VAR method_result_00095))
    (CONSTANT INT constant_00096 1)
    (CONSTANT INT constant_00097 2)
    (CONSTANT INT constant_00098 3)
    (VAR VOID method_result_00099 :public false :global_constant false :method_param false :original method_result_00099 :method null :private_method false :volatile false :member false)
    (VAR VOID method_result_00100 :public false :global_constant false :method_param false :original method_result_00100 :method null :private_method false :volatile false :member false)
    (VAR VOID method_result_00101 :public false :global_constant false :method_param false :original method_result_00101 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER write
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET method_result_00095 (CALL write_data_0092 write_ecc_0093 :no_wait false :name doEcc :args ( data ecc)) :next (3))
      )
      (SLOT 3
        (SET write_newData_0094 (ASSIGN method_result_00095) :next (4))
      )
      (SLOT 4
        (SELECT write_ecc_0093 :target write_ecc_0093 :patterns ( constant_00096 constant_00097 constant_00098) :next (13 10 7 6))
      )
      (SLOT 5
        (JP :next (16))
      )
      (SLOT 6
        (JP :next (5))
      )
      (SLOT 7
        (SET method_result_00099 (CALL write_address_0091 write_newData_0094 :no_wait false :name writeRAM :args ( address data)) :next (8))
      )
      (SLOT 8
        (BREAK :next (5))
      )
      (SLOT 9
        (JP :next (6))
      )
      (SLOT 10
        (SET method_result_00100 (CALL write_address_0091 write_newData_0094 :no_wait false :name writeRAM :args ( address data)) :next (11))
      )
      (SLOT 11
        (BREAK :next (5))
      )
      (SLOT 12
        (JP :next (7))
      )
      (SLOT 13
        (SET method_result_00101 (CALL write_address_0091 write_newData_0094 :no_wait false :name writeRAM :args ( address data)) :next (14))
      )
      (SLOT 14
        (BREAK :next (5))
      )
      (SLOT 15
        (JP :next (10))
      )
      (SLOT 16
        (JP :next (0))
      )
    )
 )
 (BOARD INT read
  (VARIABLES 
    (VAR INT read_address_0102 :public false :global_constant false :method_param true :original address :method read :private_method true :volatile false :member false)
    (VAR INT read_ecc_0103 :public false :global_constant false :method_param true :original ecc :method read :private_method true :volatile false :member false)
    (VAR INT method_result_00105 :public false :global_constant false :method_param false :original method_result_00105 :method null :private_method false :volatile false :member false)
    (VAR INT read_data_0104 :public false :global_constant false :method_param false :original data :method read :private_method true :volatile false :member false :init (REF VAR method_result_00105))
    (VAR INT method_result_00106 :public false :global_constant false :method_param false :original method_result_00106 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER read
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SET method_result_00105 (CALL read_address_0102 :no_wait false :name readRAM :args ( address)) :next (3))
      )
      (SLOT 3
        (SET read_data_0104 (ASSIGN method_result_00105) :next (4))
      )
      (SLOT 4
        (SET method_result_00106 (CALL read_data_0104 read_ecc_0103 :no_wait false :name doEcc :args ( data ecc)) :next (5))
      )
      (SLOT 5
        (RETURN method_result_00106 :next (0))
      )
      (SLOT 6
        (JP :next (0))
      )
    )
 )
 (BOARD VOID writeRAM
  (VARIABLES 
    (VAR INT writeRAM_address_0107 :public false :global_constant false :method_param true :original address :method writeRAM :private_method true :volatile false :member false)
    (VAR INT writeRAM_data_0108 :public false :global_constant false :method_param true :original data :method writeRAM :private_method true :volatile false :member false)
  )
    (SEQUENCER writeRAM
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (JP :next (0))
      )
    )
 )
 (BOARD INT readRAM
  (VARIABLES 
    (VAR INT readRAM_address_0109 :public false :global_constant false :method_param true :original address :method readRAM :private_method true :volatile false :member false)
    (CONSTANT INT constant_00110 0)
  )
    (SEQUENCER readRAM
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN constant_00110 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD BOOLEAN checkECC
  (VARIABLES 
    (VAR INT checkECC_data_0111 :public false :global_constant false :method_param true :original data :method checkECC :private_method true :volatile false :member false)
    (VAR INT checkECC_ecc_0112 :public false :global_constant false :method_param true :original ecc :method checkECC :private_method true :volatile false :member false)
    (CONSTANT INT constant_00113 0)
    (CONSTANT INT constant_00114 1)
    (CONSTANT INT constant_00115 2)
    (CONSTANT INT constant_00116 3)
    (VAR BOOLEAN method_result_00117 :public false :global_constant false :method_param false :original method_result_00117 :method null :private_method false :volatile false :member false)
    (VAR BOOLEAN method_result_00118 :public false :global_constant false :method_param false :original method_result_00118 :method null :private_method false :volatile false :member false)
    (VAR BOOLEAN method_result_00119 :public false :global_constant false :method_param false :original method_result_00119 :method null :private_method false :volatile false :member false)
    (CONSTANT BOOLEAN constant_00120 true)
  )
    (SEQUENCER checkECC
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SELECT checkECC_ecc_0112 :target checkECC_ecc_0112 :patterns ( constant_00113 constant_00114 constant_00115 constant_00116) :next (14 11 8 5 4))
      )
      (SLOT 3
        (JP :next (16))
      )
      (SLOT 4
        (JP :next (3))
      )
      (SLOT 5
        (SET method_result_00117 (CALL checkECC_data_0111 :no_wait false :name checkReedSolomon :args ( data)) :next (6))
      )
      (SLOT 6
        (RETURN method_result_00117 :next (0))
      )
      (SLOT 7
        (JP :next (4))
      )
      (SLOT 8
        (SET method_result_00118 (CALL checkECC_data_0111 :no_wait false :name checkHamming :args ( data)) :next (9))
      )
      (SLOT 9
        (RETURN method_result_00118 :next (0))
      )
      (SLOT 10
        (JP :next (5))
      )
      (SLOT 11
        (SET method_result_00119 (CALL checkECC_data_0111 :no_wait false :name checkParity :args ( data)) :next (12))
      )
      (SLOT 12
        (RETURN method_result_00119 :next (0))
      )
      (SLOT 13
        (JP :next (8))
      )
      (SLOT 14
        (RETURN constant_00120 :next (0))
      )
      (SLOT 15
        (JP :next (11))
      )
      (SLOT 16
        (JP :next (0))
      )
    )
 )
 (BOARD INT doEcc
  (VARIABLES 
    (VAR INT doEcc_data_0121 :public false :global_constant false :method_param true :original data :method doEcc :private_method true :volatile false :member false)
    (VAR INT doEcc_ecc_0122 :public false :global_constant false :method_param true :original ecc :method doEcc :private_method true :volatile false :member false)
    (CONSTANT INT constant_00123 0)
    (CONSTANT INT constant_00124 1)
    (CONSTANT INT constant_00125 2)
    (CONSTANT INT constant_00126 3)
    (VAR INT method_result_00127 :public false :global_constant false :method_param false :original method_result_00127 :method null :private_method false :volatile false :member false)
    (VAR INT method_result_00128 :public false :global_constant false :method_param false :original method_result_00128 :method null :private_method false :volatile false :member false)
    (VAR INT method_result_00129 :public false :global_constant false :method_param false :original method_result_00129 :method null :private_method false :volatile false :member false)
  )
    (SEQUENCER doEcc
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (SELECT doEcc_ecc_0122 :target doEcc_ecc_0122 :patterns ( constant_00123 constant_00124 constant_00125 constant_00126) :next (14 11 8 5 4))
      )
      (SLOT 3
        (JP :next (16))
      )
      (SLOT 4
        (JP :next (3))
      )
      (SLOT 5
        (SET method_result_00127 (CALL doEcc_data_0121 :no_wait false :name doReedSolomon :args ( data)) :next (6))
      )
      (SLOT 6
        (RETURN method_result_00127 :next (0))
      )
      (SLOT 7
        (JP :next (4))
      )
      (SLOT 8
        (SET method_result_00128 (CALL doEcc_data_0121 :no_wait false :name doHamming :args ( data)) :next (9))
      )
      (SLOT 9
        (RETURN method_result_00128 :next (0))
      )
      (SLOT 10
        (JP :next (5))
      )
      (SLOT 11
        (SET method_result_00129 (CALL doEcc_data_0121 :no_wait false :name doParity :args ( data)) :next (12))
      )
      (SLOT 12
        (RETURN method_result_00129 :next (0))
      )
      (SLOT 13
        (JP :next (8))
      )
      (SLOT 14
        (RETURN doEcc_data_0121 :next (0))
      )
      (SLOT 15
        (JP :next (11))
      )
      (SLOT 16
        (JP :next (0))
      )
    )
 )
 (BOARD INT doReedSolomon
  (VARIABLES 
    (VAR INT doReedSolomon_data_0130 :public false :global_constant false :method_param true :original data :method doReedSolomon :private_method true :volatile false :member false)
  )
    (SEQUENCER doReedSolomon
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN doReedSolomon_data_0130 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD INT doHamming
  (VARIABLES 
    (VAR INT doHamming_data_0131 :public false :global_constant false :method_param true :original data :method doHamming :private_method true :volatile false :member false)
  )
    (SEQUENCER doHamming
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN doHamming_data_0131 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD INT doParity
  (VARIABLES 
    (VAR INT doParity_data_0132 :public false :global_constant false :method_param true :original data :method doParity :private_method true :volatile false :member false)
  )
    (SEQUENCER doParity
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN doParity_data_0132 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD BOOLEAN checkReedSolomon
  (VARIABLES 
    (VAR INT checkReedSolomon_data_0133 :public false :global_constant false :method_param true :original data :method checkReedSolomon :private_method true :volatile false :member false)
    (CONSTANT BOOLEAN constant_00134 true)
  )
    (SEQUENCER checkReedSolomon
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN constant_00134 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD BOOLEAN checkHamming
  (VARIABLES 
    (VAR INT checkHamming_data_0135 :public false :global_constant false :method_param true :original data :method checkHamming :private_method true :volatile false :member false)
    (CONSTANT BOOLEAN constant_00136 true)
  )
    (SEQUENCER checkHamming
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN constant_00136 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
 (BOARD BOOLEAN checkParity
  (VARIABLES 
    (VAR INT checkParity_data_0137 :public false :global_constant false :method_param true :original data :method checkParity :private_method true :volatile false :member false)
    (CONSTANT BOOLEAN constant_00138 true)
  )
    (SEQUENCER checkParity
      (SLOT 0
        (METHOD_EXIT :next (1))
      )
      (SLOT 1
        (METHOD_ENTRY :next (2))
      )
      (SLOT 2
        (RETURN constant_00138 :next (0))
      )
      (SLOT 3
        (JP :next (0))
      )
    )
 )
)
